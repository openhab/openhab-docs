source,id,label,description
oh1,caldav,CalDAV,"This binding can be used to connect through the CalDAV Interface to calendars."
oh1,cosm,Xively (formerly Cosm),"This service allows you to feed item states to the [Xively IoT Platform](https://www.xively.com/)."
oh1,db4o,db4o,"db4o is a pure Java object database, which uses a simple database file for persistence."
oh1,dynamodb,Amazon DynamoDB,"This service allows you to persist state updates using the [Amazon DynamoDB](https://aws.amazon.com/dynamodb/) database. Query functionality is also fully supported."
oh1,exec,Exec,"This service allows you to execute commands in the underlying OS to persist item states. It could be used to, for example, call the original `rrdtool` CLI tool."
oh1,influxdb,InfluxDB (0.9 and newer),"This service allows you to persist and query states using the [InfluxDB](http://influxdb.org) time series database. The persisted values can be queried from within openHAB. There also are nice tools on the web for visualizing InfluxDB time series, such as [Grafana](http://grafana.org/)."
oh1,influxdb08,InfluxDB (up to 0.8.x),"This service allows you to persist and query states using the [InfluxDB](http://influxdb.org) time series database. The persisted values can be queried from within openHAB. There also are nice tools on the web for visualizing InfluxDB time series, such as [Grafana](http://grafana.org/)."
oh1,jdbc,JDBC,"This service writes and reads item states to and from a number of relational database systems that support [Java Database Connectivity (JDBC)](https://en.wikipedia.org/wiki/Java_Database_Connectivity).  This service allows you to persist state updates using one of several different underlying database services. It is designed for a maximum of scalability, to store very large amounts of data and still over the years not lose its speed."
oh1,jpa,Java API (JPA),"This service allows you to persist state updates using a SQL or NoSQL database through the [Java Persistence API](https://en.wikipedia.org/wiki/Java_Persistence_API).  The service uses an abstraction layer that theoretically allows it to support many available SQL or NoSQL databases."
oh1,mapdb,mapdb,"The [mapdb](http://www.mapdb.org/) Persistence Service is based on simple key-value store that only saves the last value. The intention is to use this for `restoreOnStartup` items because all other persistence options have their drawbacks if values are only needed for reload.  They:"
oh1,mongodb,MongoDB,"This service allows you to persist state updates using the MongoDB database.  It supports writing information to a MongoDB document store, as well as querying from it."
oh1,mqtt,MQTT,"This service allows you to feed item states to an MQTT broker using the openHAB persistence strategies.  The destination broker, topic and messages are configurable."
oh1,mysql,MySQL,"This service allows you to persist state updates using the [MySQL](https://www.mysql.com/) database. Note that other SQL databases need a separate service due to incompatibilities between different SQL databases."
oh1,rrd4j,rrd4j,"The [rrd4j](https://github.com/rrd4j/rrd4j) Persistence service is based on a round-robin database."
oh1,sense,Sen.Se,"This service allows you to feed item data to [Sen.Se web site](http://open.sen.se)."
oh1,sitewhere,SiteWhere,"The [SiteWhere](http://www.sitewhere.org/) persistence service allows openHAB item states to be forwarded to a SiteWhere server instance running locally or in the cloud. Selected events from an openHAB instance can be stored in SiteWhere under a virtual device with hardware ID specified in the persistence provider implementation."
